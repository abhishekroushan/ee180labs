$date
	Mon Mar  5 20:58:11 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module userlogic_test $end
$var wire 32 ! data_out [31:0] $end
$var wire 15 " input_buffer_addr [14:0] $end
$var wire 15 # output_buffer_addr [14:0] $end
$var wire 32 $ ul_instr [31:0] $end
$var wire 32 % ul_instr_addr [31:0] $end
$var wire 32 & ul_read_addr [31:0] $end
$var wire 32 ' ul_read_data [31:0] $end
$var wire 32 ( ul_status [31:0] $end
$var wire 32 ) ul_test [31:0] $end
$var wire 32 * ul_write_addr [31:0] $end
$var wire 32 + ul_write_data [31:0] $end
$var wire 16 , ul_write_data_hi [15:0] $end
$var wire 16 - ul_write_data_lo [15:0] $end
$var wire 2 . ul_write_en_hi [1:0] $end
$var wire 2 / ul_write_en_lo [1:0] $end
$var reg 1 0 clk $end
$var reg 32 1 cycle_count [32:1] $end
$var integer 32 2 dump_vars [31:0] $end
$var reg 8192 3 dump_vars_filename [8192:1] $end
$var integer 32 4 i [31:0] $end
$var reg 10 5 image_n_columns [9:0] $end
$var reg 10 6 image_n_rows [9:0] $end
$var reg 8192 7 input_buffer_filename [8192:1] $end
$var reg 8192 8 instr_mem_filename [8192:1] $end
$var reg 32 9 num_cycles [32:1] $end
$var reg 33 : out_end_addr [32:0] $end
$var reg 33 ; out_start_addr [32:0] $end
$var integer 32 < outfile [31:0] $end
$var reg 8192 = output_buffer_filename [8192:1] $end
$var reg 15 > read_addr [14:0] $end
$var integer 32 ? read_input_buffer [31:0] $end
$var integer 32 @ read_instr_mem [31:0] $end
$var integer 32 A result [31:0] $end
$var reg 1 B rst_n $end
$var reg 8192 C test_result_filename [8192:1] $end
$var reg 32 D ul_command [31:0] $end
$var integer 32 E write_output_buffer [31:0] $end
$var integer 32 F write_test_result [31:0] $end
$scope module instr_mem $end
$var wire 14 G addr [13:0] $end
$var wire 1 H clk $end
$var wire 32 I din [31:0] $end
$var wire 1 J we $end
$var reg 32 K dout [31:0] $end
$upscope $end
$scope module input_buffer $end
$var wire 15 L addr [14:0] $end
$var wire 1 H clk $end
$var wire 32 M din [31:0] $end
$var wire 1 N we $end
$var reg 32 O dout [31:0] $end
$upscope $end
$scope module output_buffer $end
$var wire 15 P addr [14:0] $end
$var wire 1 H clk $end
$var wire 32 Q din [31:0] $end
$var wire 4 R we [3:0] $end
$var reg 32 S dout [31:0] $end
$scope begin column[0] $end
$upscope $end
$scope begin column[1] $end
$upscope $end
$scope begin column[2] $end
$upscope $end
$scope begin column[3] $end
$upscope $end
$upscope $end
$scope module ul $end
$var wire 1 T addr_cmd $end
$var wire 1 U addr_iobuf $end
$var wire 1 V addr_local $end
$var wire 1 W addr_status $end
$var wire 1 X addr_test $end
$var wire 1 H clk $end
$var wire 32 Y command [31:0] $end
$var wire 32 Z instr [31:0] $end
$var wire 32 [ instr_addr [31:0] $end
$var wire 32 \ mips_addr [31:0] $end
$var wire 32 ] mips_local_read_data [31:0] $end
$var wire 32 ^ mips_pc [31:0] $end
$var wire 32 _ mips_read_data [31:0] $end
$var wire 1 ` mips_read_en $end
$var wire 4 a mips_write_en [3:0] $end
$var wire 32 b read_addr_hi [31:0] $end
$var wire 32 c read_addr_lo [31:0] $end
$var wire 32 d read_data [31:0] $end
$var wire 16 e read_data_hi [15:0] $end
$var wire 16 f read_data_lo [15:0] $end
$var wire 1 g rst_n $end
$var wire 32 h status [31:0] $end
$var wire 32 i test [31:0] $end
$var wire 32 j write_addr_hi [31:0] $end
$var wire 32 k write_addr_lo [31:0] $end
$var wire 32 l write_data [31:0] $end
$var wire 16 m write_data_hi [15:0] $end
$var wire 16 n write_data_lo [15:0] $end
$var wire 2 o write_en_hi [1:0] $end
$var wire 2 p write_en_lo [1:0] $end
$var reg 32 q cmd_d [31:0] $end
$var reg 1 r read_cmd_d $end
$var reg 1 s read_iobuf_d $end
$var reg 32 t status_reg [31:0] $end
$var reg 32 u test_reg [31:0] $end
$scope module cpu $end
$var wire 32 v alu_op_x_ex [31:0] $end
$var wire 32 w alu_op_x_id [31:0] $end
$var wire 32 x alu_op_y_ex [31:0] $end
$var wire 32 y alu_op_y_id [31:0] $end
$var wire 1 z alu_op_y_zero_ex $end
$var wire 4 { alu_opcode_ex [3:0] $end
$var wire 4 | alu_opcode_id [3:0] $end
$var wire 1 } alu_overflow $end
$var wire 32 ~ alu_result_ex [31:0] $end
$var wire 32 !" alu_result_mem [31:0] $end
$var wire 32 "" alu_sc_result_ex [31:0] $end
$var wire 1 #" atomic_en $end
$var wire 1 H clk $end
$var wire 1 $" en $end
$var wire 1 %" en_if $end
$var wire 32 &" instr [31:0] $end
$var wire 32 '" instr_id [31:0] $end
$var wire 30 (" instr_number_id [29:0] $end
$var wire 32 )" instr_sav [31:0] $end
$var wire 32 *" jr_pc_id [31:0] $end
$var wire 1 +" jump_branch_id $end
$var wire 1 ," jump_reg_id $end
$var wire 1 -" jump_target_id $end
$var wire 32 ." mem_addr [31:0] $end
$var wire 1 /" mem_atomic_ex $end
$var wire 1 0" mem_atomic_id $end
$var wire 1 1" mem_atomic_mem $end
$var wire 1 2" mem_byte_ex $end
$var wire 1 3" mem_byte_id $end
$var wire 1 4" mem_byte_mem $end
$var wire 1 5" mem_ll_ex $end
$var wire 1 6" mem_ll_id $end
$var wire 32 7" mem_out [31:0] $end
$var wire 32 8" mem_read_data [31:0] $end
$var wire 32 9" mem_read_data_byte_extend [31:0] $end
$var wire 8 :" mem_read_data_byte_select [7:0] $end
$var wire 1 ` mem_read_en $end
$var wire 1 ;" mem_read_ex $end
$var wire 1 <" mem_read_id $end
$var wire 1 =" mem_read_mem $end
$var wire 1 >" mem_sc_ex $end
$var wire 1 ?" mem_sc_id $end
$var wire 1 @" mem_sc_mask_id $end
$var wire 1 A" mem_signextend_ex $end
$var wire 1 B" mem_signextend_id $end
$var wire 1 C" mem_signextend_mem $end
$var wire 1 D" mem_we_ex $end
$var wire 1 E" mem_we_id $end
$var wire 32 F" mem_write_data [31:0] $end
$var wire 32 G" mem_write_data_ex [31:0] $end
$var wire 32 H" mem_write_data_id [31:0] $end
$var wire 4 I" mem_write_en [3:0] $end
$var wire 1 J" movn_ex $end
$var wire 1 K" movn_id $end
$var wire 1 L" movz_ex $end
$var wire 1 M" movz_id $end
$var wire 32 N" pc [31:0] $end
$var wire 32 O" pc_id [31:0] $end
$var wire 32 P" pc_if [31:0] $end
$var wire 1 Q" reg_we_cond_ex $end
$var wire 1 R" reg_we_ex $end
$var wire 1 S" reg_we_id $end
$var wire 1 T" reg_we_mem $end
$var wire 1 U" reg_we_wb $end
$var wire 5 V" reg_write_addr_ex [4:0] $end
$var wire 5 W" reg_write_addr_id [4:0] $end
$var wire 5 X" reg_write_addr_mem [4:0] $end
$var wire 5 Y" reg_write_addr_wb [4:0] $end
$var wire 32 Z" reg_write_data_mem [31:0] $end
$var wire 32 [" reg_write_data_wb [31:0] $end
$var wire 5 \" rs_addr_id [4:0] $end
$var wire 32 ]" rs_data [31:0] $end
$var wire 32 ^" rs_data_id [31:0] $end
$var wire 32 _" rs_data_id_fetch [31:0] $end
$var wire 1 `" rst $end
$var wire 1 a" rst_ex $end
$var wire 1 b" rst_id $end
$var wire 5 c" rt_addr_id [4:0] $end
$var wire 32 d" rt_data [31:0] $end
$var wire 32 e" rt_data_id [31:0] $end
$var wire 32 f" sc_result [31:0] $end
$var wire 1 g" stall $end
$var wire 1 h" stall_r $end
$scope module if_stage $end
$var wire 32 i" br_target [31:0] $end
$var wire 1 H clk $end
$var wire 1 %" en $end
$var wire 26 j" instr_id [25:0] $end
$var wire 32 k" j_addr [31:0] $end
$var wire 1 +" jump_branch $end
$var wire 1 ," jump_reg $end
$var wire 1 -" jump_target $end
$var wire 32 l" pc [31:0] $end
$var wire 32 m" pc_id [31:0] $end
$var wire 32 n" pc_id_p4 [31:0] $end
$var wire 32 o" pc_next [31:0] $end
$var wire 32 p" rs_data_in [31:0] $end
$var wire 1 `" rst $end
$scope module pc_reg $end
$var wire 1 H clk $end
$var wire 32 q" d [31:0] $end
$var wire 1 %" en $end
$var wire 1 `" r $end
$var reg 32 r" q [31:0] $end
$upscope $end
$upscope $end
$scope module pc_if2id $end
$var wire 1 H clk $end
$var wire 32 s" d [31:0] $end
$var wire 1 %" en $end
$var wire 1 `" r $end
$var reg 32 t" q [31:0] $end
$upscope $end
$scope module instr_sav_dff $end
$var wire 1 H clk $end
$var wire 32 u" d [31:0] $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 32 v" q [31:0] $end
$upscope $end
$scope module stall_f_dff $end
$var wire 1 H clk $end
$var wire 1 g" d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 w" q $end
$upscope $end
$scope module rs_data_id_to_fetch $end
$var wire 1 H clk $end
$var wire 32 x" d [31:0] $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 32 y" q [31:0] $end
$upscope $end
$scope module rst_id_ex $end
$var wire 1 H clk $end
$var wire 1 b" d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 z" q $end
$upscope $end
$scope module d_stage $end
$var wire 32 {" alu_op_x [31:0] $end
$var wire 32 |" alu_op_y [31:0] $end
$var wire 32 }" alu_result_ex [31:0] $end
$var wire 1 /" atomic_ex $end
$var wire 1 0" atomic_id $end
$var wire 1 1" atomic_mem $end
$var wire 1 ~" forward_rs_ex $end
$var wire 1 !# forward_rs_mem $end
$var wire 1 "# forward_rt_ex $end
$var wire 1 ## forward_rt_mem $end
$var wire 6 $# funct [5:0] $end
$var wire 32 %# imm [31:0] $end
$var wire 32 &# imm_sign_extend [31:0] $end
$var wire 32 '# imm_upper [31:0] $end
$var wire 32 (# imm_zero_extend [31:0] $end
$var wire 16 )# immediate [15:0] $end
$var wire 32 *# instr [31:0] $end
$var wire 1 +# isALUImm $end
$var wire 1 ,# isBEQ $end
$var wire 1 -# isBGEZAL $end
$var wire 1 .# isBGEZNL $end
$var wire 1 /# isBGTZ $end
$var wire 1 0# isBLEZ $end
$var wire 1 1# isBLTZAL $end
$var wire 1 2# isBLTZNL $end
$var wire 1 3# isBNE $end
$var wire 1 4# isBranchLink $end
$var wire 1 5# isEqual $end
$var wire 1 6# isGeZ $end
$var wire 1 7# isJ $end
$var wire 1 8# isJAL $end
$var wire 1 9# isJALR $end
$var wire 1 :# isJR $end
$var wire 1 ;# isLA $end
$var wire 1 <# isLUI $end
$var wire 1 =# isLZ $end
$var wire 1 ># isLeZ $end
$var wire 1 ?# isSLL $end
$var wire 1 @# isSLLV $end
$var wire 1 A# isSRA $end
$var wire 1 B# isSRAV $end
$var wire 1 C# isSRL $end
$var wire 1 D# isSRLV $end
$var wire 1 E# isShift $end
$var wire 1 F# isShiftImm $end
$var wire 32 G# jr_pc [31:0] $end
$var wire 1 +" jump_branch $end
$var wire 1 ," jump_reg $end
$var wire 1 -" jump_target $end
$var wire 1 3" mem_byte $end
$var wire 1 5" mem_ll_ex $end
$var wire 1 6" mem_ll_id $end
$var wire 1 <" mem_read $end
$var wire 1 ;" mem_read_ex $end
$var wire 1 ?" mem_sc_id $end
$var wire 1 @" mem_sc_mask_id $end
$var wire 1 B" mem_signextend $end
$var wire 1 E" mem_we $end
$var wire 32 H# mem_write_data [31:0] $end
$var wire 1 K" movn $end
$var wire 1 M" movz $end
$var wire 6 I# op [5:0] $end
$var wire 32 J# pc [31:0] $end
$var wire 32 K# pc_id_p8 [31:0] $end
$var wire 5 L# rd_addr [4:0] $end
$var wire 1 M# read_from_rs $end
$var wire 1 N# read_from_rt $end
$var wire 1 S" reg_we $end
$var wire 1 R" reg_we_ex $end
$var wire 1 T" reg_we_mem $end
$var wire 5 O# reg_write_addr [4:0] $end
$var wire 5 P# reg_write_addr_ex [4:0] $end
$var wire 5 Q# reg_write_addr_mem [4:0] $end
$var wire 32 R# reg_write_data_mem [31:0] $end
$var wire 5 S# rs_addr [4:0] $end
$var wire 32 T# rs_data [31:0] $end
$var wire 32 U# rs_data_in [31:0] $end
$var wire 1 V# rs_mem_dependency $end
$var wire 5 W# rt_addr [4:0] $end
$var wire 32 X# rt_data [31:0] $end
$var wire 32 Y# rt_data_in [31:0] $end
$var wire 1 Z# rt_mem_dependency $end
$var wire 5 [# shamt [4:0] $end
$var wire 32 \# shift_amount [31:0] $end
$var wire 1 g" stall $end
$var wire 1 ]# use_imm $end
$var reg 4 ^# alu_opcode [3:0] $end
$upscope $end
$scope module atomic $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 0" d $end
$var wire 1 #" en $end
$var wire 1 b" r $end
$var reg 1 _# q $end
$upscope $end
$scope module atomic_mem $end
$var wire 1 H clk $end
$var wire 1 /" d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 `# q $end
$upscope $end
$scope module sc $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 ?" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 a# q $end
$upscope $end
$scope module ll $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 6" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 b# q $end
$upscope $end
$scope module alu_op_x_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 32 c# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 32 d# q [31:0] $end
$upscope $end
$scope module alu_op_y_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 32 e# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 32 f# q [31:0] $end
$upscope $end
$scope module alu_opcode_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 4 g# d [3:0] $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 4 h# q [3:0] $end
$upscope $end
$scope module movn $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 K" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 i# q $end
$upscope $end
$scope module movz $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 M" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 j# q $end
$upscope $end
$scope module lw_mem_read_ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 <" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 k# q $end
$upscope $end
$scope module mem_write_data_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 32 l# d [31:0] $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 32 m# q [31:0] $end
$upscope $end
$scope module mem_we_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 n# d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 o# q $end
$upscope $end
$scope module mem_read_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 p# d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 q# q $end
$upscope $end
$scope module mem_byte_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 3" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 r# q $end
$upscope $end
$scope module mem_signextend_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 B" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 s# q $end
$upscope $end
$scope module lw_mem_read_mem $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 ;" d $end
$var wire 1 $" en $end
$var wire 1 a" r $end
$var reg 1 t# q $end
$upscope $end
$scope module reg_write_addr_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 5 u# d [4:0] $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 5 v# q [4:0] $end
$upscope $end
$scope module reg_we_id2ex $end
$var wire 1 `" ar $end
$var wire 1 H clk $end
$var wire 1 S" d $end
$var wire 1 $" en $end
$var wire 1 b" r $end
$var reg 1 w# q $end
$upscope $end
$scope module x_stage $end
$var wire 1 x# add_check $end
$var wire 1 y# add_neg_over $end
$var wire 1 z# add_pos_over $end
$var wire 1 {# alu_neg $end
$var wire 32 |# alu_op_x [31:0] $end
$var wire 32 }# alu_op_x_signed [31:0] $end
$var wire 32 ~# alu_op_y [31:0] $end
$var wire 32 !$ alu_op_y_signed [31:0] $end
$var wire 1 z alu_op_y_zero $end
$var wire 4 "$ alu_opcode [3:0] $end
$var wire 1 } alu_overflow $end
$var wire 1 #$ sub_check $end
$var wire 1 $$ sub_neg_over $end
$var wire 1 %$ sub_pos_over $end
$var wire 1 &$ x_neg $end
$var wire 1 '$ y_neg $end
$var reg 32 ($ alu_result [31:0] $end
$upscope $end
$scope module alu_result_ex2mem $end
$var wire 1 H clk $end
$var wire 32 )$ d [31:0] $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 32 *$ q [31:0] $end
$upscope $end
$scope module mem_read_ex2mem $end
$var wire 1 H clk $end
$var wire 1 +$ d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 ,$ q $end
$upscope $end
$scope module mem_byte_ex2mem $end
$var wire 1 H clk $end
$var wire 1 2" d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 -$ q $end
$upscope $end
$scope module mem_signextend_ex2mem $end
$var wire 1 H clk $end
$var wire 1 A" d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 .$ q $end
$upscope $end
$scope module reg_write_addr_ex2mem $end
$var wire 1 H clk $end
$var wire 5 /$ d [4:0] $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 5 0$ q [4:0] $end
$upscope $end
$scope module reg_we_ex2mem $end
$var wire 1 H clk $end
$var wire 1 R" d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 1$ q $end
$upscope $end
$scope module reg_write_data_mem2wb $end
$var wire 1 H clk $end
$var wire 32 2$ d [31:0] $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 32 3$ q [31:0] $end
$upscope $end
$scope module reg_write_addr_mem2wb $end
$var wire 1 H clk $end
$var wire 5 4$ d [4:0] $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 5 5$ q [4:0] $end
$upscope $end
$scope module reg_we_mem2wb $end
$var wire 1 H clk $end
$var wire 1 T" d $end
$var wire 1 $" en $end
$var wire 1 `" r $end
$var reg 1 6$ q $end
$upscope $end
$scope module w_stage $end
$var wire 1 H clk $end
$var wire 1 $" en $end
$var wire 1 U" reg_we $end
$var wire 5 7$ reg_write_addr [4:0] $end
$var wire 32 8$ reg_write_data [31:0] $end
$var wire 5 9$ rs_addr [4:0] $end
$var wire 32 :$ rs_data [31:0] $end
$var wire 5 ;$ rt_addr [4:0] $end
$var wire 32 <$ rt_data [31:0] $end
$upscope $end
$upscope $end
$scope module mips_local_store $end
$var wire 12 =$ addr [11:0] $end
$var wire 1 H clk $end
$var wire 32 >$ din [31:0] $end
$var wire 4 ?$ we [3:0] $end
$var reg 32 @$ dout [31:0] $end
$scope begin column[0] $end
$upscope $end
$scope begin column[1] $end
$upscope $end
$scope begin column[2] $end
$upscope $end
$scope begin column[3] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx @$
b0 ?$
b0 >$
b0 =$
bx <$
bx ;$
bx :$
bx 9$
b0 8$
b0 7$
06$
b0 5$
b0 4$
b0 3$
b0 2$
01$
b0 0$
b0 /$
0.$
0-$
0,$
0+$
b0 *$
b0 )$
b0 ($
0'$
0&$
0%$
0$$
0#$
b0 "$
b0 !$
b0 ~#
b0 }#
b0 |#
0{#
0z#
0y#
0x#
0w#
b0 v#
bx u#
0t#
0s#
0r#
0q#
0p#
0o#
xn#
b0 m#
bx l#
0k#
0j#
0i#
b0 h#
b1101 g#
b0 f#
bx e#
b0 d#
bx c#
0b#
0a#
0`#
0_#
b1101 ^#
x]#
b0xxxxx \#
bx [#
0Z#
bx Y#
bx X#
bx W#
0V#
bx U#
bx T#
bx S#
b0 R#
b0 Q#
b0 P#
bx O#
xN#
xM#
bx L#
b1000 K#
b0 J#
bx I#
bx H#
bx G#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
bx *#
bx )#
b0xxxxxxxxxxxxxxxx (#
bx0000000000000000 '#
bx &#
bx %#
bx $#
0##
0"#
0!#
0~"
b0 }"
bx |"
bx {"
0z"
b0 y"
bx x"
0w"
b0 v"
bx u"
b0 t"
b0 s"
b0 r"
bx q"
bx p"
bx o"
b100 n"
b0 m"
b0 l"
bx k"
bx j"
bx i"
0h"
0g"
b0 f"
bx e"
bx d"
bx c"
0b"
0a"
0`"
b0 _"
bx ^"
bx ]"
bx \"
b0 ["
b0 Z"
b0 Y"
b0 X"
bx W"
b0 V"
0U"
0T"
xS"
0R"
0Q"
b0 P"
b0 O"
b0 N"
xM"
0L"
xK"
0J"
b0 I"
bx H"
b0 G"
b0 F"
xE"
0D"
0C"
xB"
0A"
x@"
x?"
0>"
0="
x<"
0;"
bx :"
b0xxxxxxxx 9"
bx 8"
bx 7"
x6"
05"
04"
x3"
02"
01"
x0"
0/"
b0 ."
x-"
x,"
x+"
bx *"
b0 )"
b0 ("
bx '"
bx &"
1%"
1$"
x#"
b0 ""
b0 !"
b0 ~
0}
b1101 |
b0 {
1z
bx y
b0 x
bx w
b0 v
bx u
bx t
xs
xr
bx q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
bx i
bx h
0g
bx f
bx e
bx d
b0 c
b0 b
b0 a
0`
bx _
b0 ^
bx ]
b0 \
b0 [
bx Z
b0xxxxxxxxxxxxxxxxxxxx10 Y
0X
0W
1V
0U
0T
bx S
b0 R
b0 Q
b0 P
bx O
0N
b0 M
b0 L
bx K
0J
b0 I
0H
b0 G
b1 F
b0 E
b0xxxxxxxxxxxxxxxxxxxx10 D
b11101000110010101110011011101000111001100101111011100110111001001100001001011110111010001100101011100110111010000101110011100100110010101110011011101010110110001110100 C
0B
b1 A
b1 @
b0 ?
b0 >
bx =
bx <
b0 ;
b100000000000000000 :
b1111101000 9
b111010001100101011100110111010001110011001011110111001101110010011000010010111101100010011101010110100101101100011001000010111101100001011100000111000000101110011010000110010101111000 8
bx 7
bx 6
bx 5
bx 4
b11101000110010101110011011101000111001100101111011100110111001001100001001011110111001101110100011100100110010101100001011011010111011101100001011101100110010100101110011101100110001101100100 3
b1 2
b0 1
00
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
bx )
bx (
bx '
b0 &
b0 %
bx $
b0 #
b0 "
bx !
$end
#5000
0E#
b0 \#
b0 w
b0 {"
b0 c#
16#
1>#
0=#
b100 o"
b100 q"
0-"
b0 *"
b0 G#
b0 ]"
b0 p"
b0 T#
b10000100000000000001000 k"
0F#
b10000000000000100000000000000000 y
b10000000000000100000000000000000 |"
b10000000000000100000000000000000 e#
0+"
04#
b10000 W"
b10000 O#
b10000 u#
0,"
b100000000000001100 i"
1S"
0n#
0#"
0@"
00"
b0 ^"
b0 x"
b0 U#
b0 :$
0.#
0-#
0/#
00#
02#
01#
0:#
0;#
09#
0?#
0C#
0A#
0@#
0D#
0B#
b1100 ^#
b1100 |
b1100 g#
b10000000000000100000000000000000 %#
0,#
03#
07#
08#
1]#
0M#
0N#
1<#
0+#
0E"
0<"
03"
1B"
0?"
06"
b1111 I#
b0 \"
b0 S#
b0 9$
b10000 c"
b10000 W#
b10000 ;$
b10000 L#
b0 [#
0K"
0M"
b10 $#
b11111111111111111000000000000010 &#
b10000000000000100000000000000000 '#
b1000000000000010 (#
b1000000000000010 )#
b100001000000000000010 j"
b111100000100001000000000000010 '"
b111100000100001000000000000010 *#
b111100000100001000000000000010 K
b111100000100001000000000000010 $
b111100000100001000000000000010 Z
b111100000100001000000000000010 &"
b111100000100001000000000000010 u"
bx S
bx @$
b0 u
b0 )
b0 i
b0 t
b0 (
b0 h
0s
0r
b0 q
10
1H
#10000
00
0H
#15000
bx @$
bx S
10
1H
#20000
1`"
00
0H
b0xxxxxxxxxxxxxxxxxxxx00 D
b0xxxxxxxxxxxxxxxxxxxx00 Y
1B
1g
#25000
0V
05#
b10000000000000100000000000000000 H"
b10000000000000100000000000000000 H#
b10000000000000100000000000000000 l#
b10000000000000100000000000000000 d"
b10000000000000100000000000000000 X#
bx ,
bx m
bx +
bx Q
bx -
bx n
0z#
1%$
1{#
b10000000000000100000000000000000 ""
b10000000000000100000000000000000 )$
b1000 o"
b1000 q"
b1 G
1R"
1"#
bx l
bx F"
bx >$
1'$
b10000000000000100000000000000000 ($
b10000000000000100000000000000000 ~
b10000000000000100000000000000000 }"
1W
b10000000000000100000000000000000 \
b10000000000000100000000000000000 ."
b1 %
b1 [
bx S
bx @$
1w#
1Q"
b10000 v#
b10000 V"
b10000 P#
b10000 /$
1s#
1A"
bx m#
bx G"
b1100 h#
b1100 {
b1100 "$
b10000000000000100000000000000000 f#
b10000000000000100000000000000000 !$
0z
b10000000000000100000000000000000 x
b10000000000000100000000000000000 ~#
b111100000100001000000000000010 v"
b111100000100001000000000000010 )"
b100 r"
b100 P"
b100 l"
b100 s"
b100 ^
b100 N"
10
1H
#30000
00
0H
b1111100111 1
b0xxxxxxxxxxxxxxxxxxxx01 D
b0xxxxxxxxxxxxxxxxxxxx01 Y
#35000
b1 y
b1 |"
b1 e#
b10001 W"
b10001 O#
b10001 u#
x5#
bx H"
bx H#
bx l#
bx d"
bx X#
b11 ^#
b11 |
b11 g#
b1 %#
b10001000000000000000100 k"
1M#
0<#
1+#
b1101 I#
0"#
b10001 c"
b10001 W#
b10001 ;$
b0 L#
b1 $#
b1 &#
b10000000000000000 '#
b1 (#
b1 )#
b100010000000000000001 j"
b1100 o"
b1100 q"
b10 G
b1000000000000010 ,
b1000000000000010 m
b10000000000000100000000000000000 +
b10000000000000100000000000000000 Q
b0 -
b0 n
b110100000100010000000000000001 '"
b110100000100010000000000000001 *#
b10 %
b10 [
b1 ("
b10000000000000100000000000000000 l
b10000000000000100000000000000000 F"
b10000000000000100000000000000000 >$
b10000000000000100000000000000000 Z"
b10000000000000100000000000000000 R#
b10000000000000100000000000000000 2$
bx 9"
bx @$
bx S
b110100000100010000000000000001 K
b110100000100010000000000000001 $
b110100000100010000000000000001 Z
b110100000100010000000000000001 &"
b110100000100010000000000000001 u"
b1000 r"
b1000 P"
b1000 l"
b1000 s"
b1000 ^
b1000 N"
b100 t"
b1100 K#
b1100 i"
b1000 n"
b100 O"
b100 m"
b100 J#
b10000000000000100000000000000000 m#
b10000000000000100000000000000000 G"
b10000000000000100000000000000000 *$
b10000000000000100000000000000000 !"
1.$
1C"
b10000 0$
0##
b10000 X"
b10000 Q#
b10000 4$
11$
1T"
10
1H
#40000
00
0H
b1111100110 1
#45000
b11011110101011110000000000000000 y
b11011110101011110000000000000000 |"
b11011110101011110000000000000000 e#
b1000 W"
b1000 O#
b1000 u#
b11011110101011110000000000000000 %#
b1100 ^#
b1100 |
b1100 g#
b1000110111101010111100 k"
1V
0M#
1<#
0N#
0+#
b1111 I#
b1000 c"
b1000 W#
b1000 ;$
b11011 L#
b11010 [#
b101111 $#
b11111111111111111101111010101111 &#
b11011110101011110000000000000000 '#
b1101111010101111 (#
b1101111010101111 )#
b10001101111010101111 j"
bx ,
bx m
bx +
bx Q
bx -
bx n
0{#
b1 ""
b1 )$
b10000 o"
b10000 q"
b11 G
b111100000010001101111010101111 '"
b111100000010001101111010101111 *#
x5#
bx H"
bx H#
bx l#
bx d"
bx X#
bx l
bx F"
bx >$
0%$
0'$
b1 ($
b1 ~
b1 }"
0U
0W
b1 \
b1 ."
b10 ("
b11 %
b11 [
b111100000010001101111010101111 K
b111100000010001101111010101111 $
b111100000010001101111010101111 Z
b111100000010001101111010101111 &"
b111100000010001101111010101111 u"
bx S
bx @$
16$
1U"
b10000 5$
b10000 Y"
b10000 7$
b10000000000000100000000000000000 3$
b10000000000000100000000000000000 ["
b10000000000000100000000000000000 8$
b10001 v#
0"#
b10001 V"
b10001 P#
b10001 /$
bx m#
bx G"
b11 h#
b11 {
b11 "$
b1 f#
b1 !$
b1 x
b1 ~#
b110100000100010000000000000001 v"
b110100000100010000000000000001 )"
b1000 t"
b10000 K#
b110111101011001000 i"
b1100 n"
b1000 O"
b1000 m"
b1000 J#
b1100 r"
b1100 P"
b1100 l"
b1100 s"
b1100 ^
b1100 N"
10
1H
#50000
00
0H
b1111100101 1
#55000
b1011111011101111 y
b1011111011101111 |"
b1011111011101111 e#
b11011110101011110000000000000000 w
b11011110101011110000000000000000 {"
b11011110101011110000000000000000 c#
1>#
1=#
b11 ^#
b11 |
b11 g#
b11011110101011110000000000000000 *"
b11011110101011110000000000000000 G#
b11011110101011110000000000000000 ]"
b11011110101011110000000000000000 p"
b11011110101011110000000000000000 T#
bx ^"
bx x"
bx U#
bx :$
b1011111011101111 %#
b100001000101111101110111100 k"
0V
1U
b100000000000000 "
b100000000000000 L
1M#
0<#
1+#
b1101 I#
1~"
b1000 \"
b1000 S#
b1000 9$
b10111 L#
b11011 [#
b11111111111111111011111011101111 &#
b10111110111011110000000000000000 '#
b1011111011101111 (#
b1011111011101111 )#
b1000010001011111011101111 j"
b10100 o"
b10100 q"
b100 G
0z#
1%$
1{#
b11011110101011110000000000000000 ""
b11011110101011110000000000000000 )$
b100000000000000 j
b100000000000000 *
b100000000000000 k
b100000000000000 b
b100000000000000 &
b100000000000000 c
b110101000010001011111011101111 '"
b110101000010001011111011101111 *#
b100 %
b100 [
b11 ("
1'$
b11011110101011110000000000000000 ($
b11011110101011110000000000000000 ~
b11011110101011110000000000000000 }"
b11011110101011110000000000000000 \
b11011110101011110000000000000000 ."
15#
b11011110101011110000000000000000 H"
b11011110101011110000000000000000 H#
b11011110101011110000000000000000 l#
b11011110101011110000000000000000 d"
b11011110101011110000000000000000 X#
b1 Z"
b1 R#
b1 2$
bx @$
bx S
b110101000010001011111011101111 K
b110101000010001011111011101111 $
b110101000010001011111011101111 Z
b110101000010001011111011101111 &"
b110101000010001011111011101111 u"
b10000 r"
b10000 P"
b10000 l"
b10000 s"
b10000 ^
b10000 N"
b1100 t"
b10100 K#
b101111101111001100 i"
b10000 n"
b1100 O"
b1100 m"
b1100 J#
b111100000010001101111010101111 v"
b111100000010001101111010101111 )"
b11011110101011110000000000000000 f#
b11011110101011110000000000000000 !$
b11011110101011110000000000000000 x
b11011110101011110000000000000000 ~#
b1100 h#
b1100 {
b1100 "$
b1000 v#
1"#
b1000 V"
b1000 P#
b1000 /$
b1 *$
b1 !"
b10001 0$
b10001 X"
b10001 Q#
b10001 4$
10
1H
#60000
00
0H
b1111100100 1
#65000
1E#
b11011110101011111011111011101111 y
b11011110101011111011111011101111 |"
b11011110101011111011111011101111 e#
b1001 W"
b1001 O#
b1001 u#
0=#
1F#
0M#
b100100100000011 %#
b100 \#
b0 ^"
b0 x"
b0 U#
b0 :$
1A#
b1001 ^#
b1001 |
b1001 g#
b1000010010010000001100 k"
b100 w
b100 {"
b100 c#
b110111110111011 "
b110111110111011 L
0]#
1N#
0+#
b0 I#
0~"
b0 \"
b0 S#
b0 9$
b1001 L#
b100 [#
b11 $#
b100100100000011 &#
b1001001000000110000000000000000 '#
b100100100000011 (#
b100100100000011 )#
b10000100100100000011 j"
b1101111010101111 ,
b1101111010101111 m
b11011110101011110000000000000000 +
b11011110101011110000000000000000 Q
b0 -
b0 n
b11011110101011111011111011101111 H"
b11011110101011111011111011101111 H#
b11011110101011111011111011101111 l#
b11011110101011111011111011101111 d"
b11011110101011111011111011101111 X#
05#
b0 *"
b0 G#
b0 ]"
b0 p"
b0 T#
b11011110101011111011111011101111 ""
b11011110101011111011111011101111 )$
b111110111011 =$
b110111110111011 j
b110111110111011 *
b110111110111011 k
b110111110111011 b
b110111110111011 &
b110111110111011 c
b11000 o"
b11000 q"
b101 G
b10000100100100000011 '"
b10000100100100000011 *#
b11011110101011110000000000000000 Z"
b11011110101011110000000000000000 R#
b11011110101011110000000000000000 2$
b11011110101011110000000000000000 l
b11011110101011110000000000000000 F"
b11011110101011110000000000000000 >$
0%$
0'$
1&$
b11011110101011111011111011101111 ($
b11011110101011111011111011101111 ~
b11011110101011111011111011101111 }"
b11011110101011111011111011101111 \
b11011110101011111011111011101111 ."
b100 ("
b101 %
b101 [
b10000100100100000011 K
b10000100100100000011 $
b10000100100100000011 Z
b10000100100100000011 &"
b10000100100100000011 u"
bx S
bx @$
b10001 5$
b10001 Y"
b10001 7$
b1 3$
b1 ["
b1 8$
b1000 0$
1##
0!#
b1000 X"
b1000 Q#
b1000 4$
b11011110101011110000000000000000 *$
b11011110101011110000000000000000 !"
b11011110101011110000000000000000 m#
b11011110101011110000000000000000 G"
b11 h#
b11 {
b11 "$
b1011111011101111 f#
b1011111011101111 !$
b1011111011101111 x
b1011111011101111 ~#
b11011110101011110000000000000000 d#
b11011110101011110000000000000000 }#
b11011110101011110000000000000000 v
b11011110101011110000000000000000 |#
bx y"
bx _"
b110101000010001011111011101111 v"
b110101000010001011111011101111 )"
b10000 t"
b11000 K#
b10010010000100000 i"
b10100 n"
b10000 O"
b10000 m"
b10000 J#
b10100 r"
b10100 P"
b10100 l"
b10100 s"
b10100 ^
b10100 N"
10
1H
#70000
00
0H
b1111100011 1
#75000
x5#
0E#
b1010 W"
b1010 O#
b1010 u#
b0 w
b0 {"
b0 c#
0F#
b11111101111010100000000000000000 %#
b0 \#
0A#
b1100 ^#
b1100 |
b1100 g#
b1010111111011110101000 k"
b11111011111011 "
b11111011111011 L
b11111101111010100000000000000000 y
b11111101111010100000000000000000 |"
b11111101111010100000000000000000 e#
bx e"
bx Y#
bx <$
1]#
0N#
1<#
b1111 I#
0##
b1010 c"
b1010 W#
b1010 ;$
b11111 L#
b10111 [#
b101010 $#
b11111111111111111111110111101010 &#
b11111101111010100000000000000000 '#
b1111110111101010 (#
b1111110111101010 )#
b10101111110111101010 j"
b11100 o"
b11100 q"
b110 G
1%$
b11111101111010101111101111101110 ""
b11111101111010101111101111101110 )$
b111011111011 =$
b11111011111011 j
b11111011111011 *
b11111011111011 k
b11111011111011 b
b11111011111011 &
b11111011111011 c
b11011110101011111011111011101111 +
b11011110101011111011111011101111 Q
b1011111011101111 -
b1011111011101111 n
b111100000010101111110111101010 '"
b111100000010101111110111101010 *#
b110 %
b110 [
b101 ("
0&$
1'$
b11111101111010101111101111101110 ($
b11111101111010101111101111101110 ~
b11111101111010101111101111101110 }"
b11111101111010101111101111101110 \
b11111101111010101111101111101110 ."
b11011110101011111011111011101111 l
b11011110101011111011111011101111 F"
b11011110101011111011111011101111 >$
bx H"
bx H#
bx l#
bx d"
bx X#
b11011110101011111011111011101111 Z"
b11011110101011111011111011101111 R#
b11011110101011111011111011101111 2$
bx @$
bx S
b111100000010101111110111101010 K
b111100000010101111110111101010 $
b111100000010101111110111101010 Z
b111100000010101111110111101010 &"
b111100000010101111110111101010 u"
b11000 r"
b11000 P"
b11000 l"
b11000 s"
b11000 ^
b11000 N"
b10100 t"
b11100 K#
b111111011111000000 i"
b11000 n"
b10100 O"
b10100 m"
b10100 J#
b10000100100100000011 v"
b10000100100100000011 )"
b0 y"
b0 _"
b100 d#
b100 }#
b100 v
b100 |#
b11011110101011111011111011101111 f#
b11011110101011111011111011101111 !$
b11011110101011111011111011101111 x
b11011110101011111011111011101111 ~#
b1001 h#
b1001 {
b1001 "$
b11011110101011111011111011101111 m#
b11011110101011111011111011101111 G"
b1001 v#
0"#
b1001 V"
b1001 P#
b1001 /$
b11011110101011111011111011101111 *$
b11011110101011111011111011101111 !"
b11011110101011110000000000000000 3$
b11011110101011110000000000000000 ["
b11011110101011110000000000000000 8$
b1000 5$
b1000 Y"
b1000 7$
10
1H
#80000
00
0H
b1111100010 1
#85000
b1111101111101110 y
b1111101111101110 |"
b1111101111101110 e#
b11111101111010100000000000000000 w
b11111101111010100000000000000000 {"
b11111101111010100000000000000000 c#
1>#
1=#
b11111101111010100000000000000000 *"
b11111101111010100000000000000000 G#
b11111101111010100000000000000000 ]"
b11111101111010100000000000000000 p"
b11111101111010100000000000000000 T#
bx ^"
bx x"
bx U#
bx :$
b11 ^#
b11 |
b11 g#
b1111101111101110 %#
b101001010111110111110111000 k"
b0 "
b0 L
1M#
0<#
1+#
b1101 I#
1~"
b1010 \"
b1010 S#
b1010 9$
b1111 [#
b101110 $#
b11111111111111111111101111101110 &#
b11111011111011100000000000000000 '#
b1111101111101110 (#
b1111101111101110 )#
b1010010101111101111101110 j"
bx ,
bx m
bx +
bx Q
bx -
bx n
b11111101111010100000000000000000 ""
b11111101111010100000000000000000 )$
b0 =$
b0 j
b0 *
b0 k
b0 b
b0 &
b0 c
b100000 o"
b100000 q"
b111 G
b110101010010101111101111101110 '"
b110101010010101111101111101110 *#
b11111101111010101111101111101110 Z"
b11111101111010101111101111101110 R#
b11111101111010101111101111101110 2$
15#
b11111101111010100000000000000000 H"
b11111101111010100000000000000000 H#
b11111101111010100000000000000000 l#
b11111101111010100000000000000000 d"
b11111101111010100000000000000000 X#
bx l
bx F"
bx >$
b11111101111010100000000000000000 ($
b11111101111010100000000000000000 ~
b11111101111010100000000000000000 }"
b11111101111010100000000000000000 \
b11111101111010100000000000000000 ."
b110 ("
b111 %
b111 [
b110101010010101111101111101110 K
b110101010010101111101111101110 $
b110101010010101111101111101110 Z
b110101010010101111101111101110 &"
b110101010010101111101111101110 u"
bx S
bx @$
b11011110101011111011111011101111 3$
b11011110101011111011111011101111 ["
b11011110101011111011111011101111 8$
b1001 0$
b1001 X"
b1001 Q#
b1001 4$
b11111101111010101111101111101110 *$
b11111101111010101111101111101110 !"
b1010 v#
1"#
b1010 V"
b1010 P#
b1010 /$
bx m#
bx G"
b1100 h#
b1100 {
b1100 "$
b11111101111010100000000000000000 f#
b11111101111010100000000000000000 !$
b11111101111010100000000000000000 x
b11111101111010100000000000000000 ~#
b0 d#
b0 }#
b0 v
b0 |#
b111100000010101111110111101010 v"
b111100000010101111110111101010 )"
b11000 t"
b100000 K#
b111110111111010100 i"
b11100 n"
b11000 O"
b11000 m"
b11000 J#
b11100 r"
b11100 P"
b11100 l"
b11100 s"
b11100 ^
b11100 N"
10
1H
#90000
00
0H
b1111100001 1
#95000
1>#
b11111101111010101111101111101110 ^"
b11111101111010101111101111101110 x"
b11111101111010101111101111101110 U#
b11111101111010101111101111101110 :$
b11111101111010101111101111101110 y
b11111101111010101111101111101110 |"
b11111101111010101111101111101110 e#
b1011 W"
b1011 O#
b1011 u#
16#
1=#
b101100000100011 %#
b1110 \#
b101 ^#
b101 |
b101 g#
b100101010010110000010001100 k"
b11111101111010101111101111101110 w
b11111101111010101111101111101110 {"
b11111101111010101111101111101110 c#
b11111011111011 "
b11111011111011 L
0]#
1N#
0+#
b0 I#
0~"
b1001 \"
b1001 S#
b1001 9$
b1011 L#
b0 [#
b100011 $#
b101100000100011 &#
b1011000001000110000000000000000 '#
b101100000100011 (#
b101100000100011 )#
b1001010100101100000100011 j"
b100100 o"
b100100 q"
b1000 G
0z#
b11111101111010101111101111101110 H"
b11111101111010101111101111101110 H#
b11111101111010101111101111101110 l#
b11111101111010101111101111101110 d"
b11111101111010101111101111101110 X#
15#
b11111101111010101111101111101110 *"
b11111101111010101111101111101110 G#
b11111101111010101111101111101110 ]"
b11111101111010101111101111101110 p"
b11111101111010101111101111101110 T#
b11111101111010101111101111101110 ""
b11111101111010101111101111101110 )$
b111011111011 =$
b11111011111011 j
b11111011111011 *
b11111011111011 k
b11111011111011 b
b11111011111011 &
b11111011111011 c
b1111110111101010 ,
b1111110111101010 m
b11111101111010100000000000000000 +
b11111101111010100000000000000000 Q
b0 -
b0 n
b1001010100101100000100011 '"
b1001010100101100000100011 *#
b1000 %
b1000 [
b111 ("
1&$
0%$
0'$
b11111101111010101111101111101110 ($
b11111101111010101111101111101110 ~
b11111101111010101111101111101110 }"
b11111101111010101111101111101110 \
b11111101111010101111101111101110 ."
b11111101111010100000000000000000 l
b11111101111010100000000000000000 F"
b11111101111010100000000000000000 >$
b11111101111010100000000000000000 Z"
b11111101111010100000000000000000 R#
b11111101111010100000000000000000 2$
bx @$
bx S
b1001010100101100000100011 K
b1001010100101100000100011 $
b1001010100101100000100011 Z
b1001010100101100000100011 &"
b1001010100101100000100011 u"
b100000 r"
b100000 P"
b100000 l"
b100000 s"
b100000 ^
b100000 N"
b11100 t"
b100100 K#
b10110000010101100 i"
b100000 n"
b11100 O"
b11100 m"
b11100 J#
b110101010010101111101111101110 v"
b110101010010101111101111101110 )"
bx y"
bx _"
b11111101111010100000000000000000 d#
b11111101111010100000000000000000 }#
b11111101111010100000000000000000 v
b11111101111010100000000000000000 |#
b1111101111101110 f#
b1111101111101110 !$
b1111101111101110 x
b1111101111101110 ~#
b11 h#
b11 {
b11 "$
b11111101111010100000000000000000 m#
b11111101111010100000000000000000 G"
b11111101111010100000000000000000 *$
b11111101111010100000000000000000 !"
b1010 0$
1##
0!#
b1010 X"
b1010 Q#
b1010 4$
b11111101111010101111101111101110 3$
b11111101111010101111101111101110 ["
b11111101111010101111101111101110 8$
b1001 5$
b1001 Y"
b1001 7$
10
1H
#100000
00
0H
b1111100000 1
#105000
b0 \#
b0 w
b0 {"
b0 c#
0=#
b10 W"
b10 O#
b10 u#
b1 %#
b0 *"
b0 G#
b0 ]"
b0 p"
b0 T#
b110 ^#
b110 |
b110 g#
b101100010000000000000000100 k"
bx e"
bx Y#
bx <$
b1 y
b1 |"
b1 e#
1y#
1V
0U
b0 "
b0 L
1]#
0N#
1+#
b1011 I#
1~"
b1011 \"
b1011 S#
b1011 9$
0##
b10 c"
b10 W#
b10 ;$
b0 L#
b1 $#
b1 &#
b10000000000000000 '#
b1 (#
b1 )#
b1011000100000000000000001 j"
bx ^"
bx x"
bx U#
bx :$
b11111101111010101111101111101110 +
b11111101111010101111101111101110 Q
b1111101111101110 -
b1111101111101110 n
0{#
b0 ""
b0 )$
b0 =$
b0 j
b0 *
b0 k
b0 b
b0 &
b0 c
b101000 o"
b101000 q"
b1001 G
b101101011000100000000000000001 '"
b101101011000100000000000000001 *#
b11111101111010101111101111101110 Z"
b11111101111010101111101111101110 R#
b11111101111010101111101111101110 2$
x5#
bx H"
bx H#
bx l#
bx d"
bx X#
b11111101111010101111101111101110 l
b11111101111010101111101111101110 F"
b11111101111010101111101111101110 >$
1'$
b0 ($
b0 ~
b0 }"
b0 \
b0 ."
b1000 ("
b1001 %
b1001 [
b101101011000100000000000000001 K
b101101011000100000000000000001 $
b101101011000100000000000000001 Z
b101101011000100000000000000001 &"
b101101011000100000000000000001 u"
bx S
bx @$
b1010 5$
b1010 Y"
b1010 7$
b11111101111010100000000000000000 3$
b11111101111010100000000000000000 ["
b11111101111010100000000000000000 8$
b11111101111010101111101111101110 *$
b11111101111010101111101111101110 !"
b1011 v#
0"#
b1011 V"
b1011 P#
b1011 /$
b11111101111010101111101111101110 m#
b11111101111010101111101111101110 G"
b101 h#
b101 {
b101 "$
b11111101111010101111101111101110 f#
b11111101111010101111101111101110 !$
b11111101111010101111101111101110 x
b11111101111010101111101111101110 ~#
b11111101111010101111101111101110 d#
b11111101111010101111101111101110 }#
b11111101111010101111101111101110 v
b11111101111010101111101111101110 |#
b11111101111010101111101111101110 y"
b11111101111010101111101111101110 _"
b1001010100101100000100011 v"
b1001010100101100000100011 )"
b100000 t"
b101000 K#
b101000 i"
b100100 n"
b100000 O"
b100000 m"
b100000 J#
b100100 r"
b100100 P"
b100100 l"
b100100 s"
b100100 ^
b100100 N"
10
1H
#110000
00
0H
b1111011111 1
#115000
b100 y
b100 |"
b100 e#
16#
b10000000000000100000000000000000 ^"
b10000000000000100000000000000000 x"
b10000000000000100000000000000000 U#
b10000000000000100000000000000000 :$
b100 %#
0S"
1n#
b1101 ^#
b1101 |
b1101 g#
b1000000010000000000000010000 k"
b0 \#
1N#
0+#
1E"
b101011 I#
b10000 \"
b10000 S#
b10000 9$
b100 $#
b100 &#
b1000000000000000000 '#
b100 (#
b100 )#
b10000000100000000000000100 j"
b101100 o"
b101100 q"
b1010 G
b1 ""
b1 )$
bx ,
bx m
bx +
bx Q
bx -
bx n
b10000000000000100000000000000000 w
b10000000000000100000000000000000 {"
b10000000000000100000000000000000 c#
1>#
1=#
b10101110000000100000000000000100 '"
b10101110000000100000000000000100 *#
b1010 %
b1010 [
b1001 ("
0&$
0y#
0'$
b1 ($
b1 ~
b1 }"
b1 \
b1 ."
bx l
bx F"
bx >$
05#
b1 H"
b1 H#
b1 l#
b1 d"
b1 X#
b10000000000000100000000000000000 *"
b10000000000000100000000000000000 G#
b10000000000000100000000000000000 ]"
b10000000000000100000000000000000 p"
b10000000000000100000000000000000 T#
b0 Z"
b0 R#
b0 2$
bx @$
bx S
b10101110000000100000000000000100 K
b10101110000000100000000000000100 $
b10101110000000100000000000000100 Z
b10101110000000100000000000000100 &"
b10101110000000100000000000000100 u"
b101000 r"
b101000 P"
b101000 l"
b101000 s"
b101000 ^
b101000 N"
b100100 t"
b101100 K#
b111000 i"
b101000 n"
b100100 O"
b100100 m"
b100100 J#
b101101011000100000000000000001 v"
b101101011000100000000000000001 )"
bx y"
bx _"
b0 d#
b0 }#
b0 v
b0 |#
b1 f#
b1 !$
b1 x
b1 ~#
b110 h#
b110 {
b110 "$
bx m#
bx G"
b10 v#
1"#
0~"
b10 V"
b10 P#
b10 /$
b0 *$
b0 !"
b1011 0$
0!#
b1011 X"
b1011 Q#
b1011 4$
b11111101111010101111101111101110 3$
b11111101111010101111101111101110 ["
b11111101111010101111101111101110 8$
10
1H
#120000
00
0H
b1111011110 1
#125000
b0 y
b0 |"
b0 e#
05#
b1 H"
b1 H#
b1 l#
b1 d"
b1 X#
b10001 W"
b10001 O#
b10001 u#
b1 e"
b1 Y#
b1 <$
b0 %#
b1000010001000000000000000000 k"
0V
b1 "
b1 L
b10001 c"
b10001 W#
b10001 ;$
b0 $#
b0 &#
b0 '#
b0 (#
b0 )#
b10000100010000000000000000 j"
b0 ?$
b0 ,
b0 m
b1 +
b1 Q
b1 -
b1 n
0z#
1{#
b10000000000000100000000000000100 ""
b10000000000000100000000000000100 )$
b1 =$
b1 j
b1 *
b1 k
b1 b
b1 &
b1 c
b110000 o"
b110000 q"
b1011 G
b10101110000100010000000000000000 '"
b10101110000100010000000000000000 *#
b1 Z"
b1 R#
b1 2$
0R"
0"#
b1111 a
b1111 I"
b1 l
b1 F"
b1 >$
0$$
1&$
b10000000000000100000000000000100 ($
b10000000000000100000000000000100 ~
b10000000000000100000000000000100 }"
1X
b10000000000000100000000000000100 \
b10000000000000100000000000000100 ."
b1010 ("
b1011 %
b1011 [
b10101110000100010000000000000000 K
b10101110000100010000000000000000 $
b10101110000100010000000000000000 Z
b10101110000100010000000000000000 &"
b10101110000100010000000000000000 u"
bx S
bx @$
b1011 5$
b1011 Y"
b1011 7$
b0 3$
b0 ["
b0 8$
b10 0$
0##
b10 X"
b10 Q#
b10 4$
b1 *$
b1 !"
0w#
0Q"
1o#
1D"
b1 m#
b1 G"
b1101 h#
1x#
b1101 {
b1101 "$
b100 f#
b100 !$
b100 x
b100 ~#
b10000000000000100000000000000000 d#
b10000000000000100000000000000000 }#
b10000000000000100000000000000000 v
b10000000000000100000000000000000 |#
b10000000000000100000000000000000 y"
b10000000000000100000000000000000 _"
b10101110000000100000000000000100 v"
b10101110000000100000000000000100 )"
b101000 t"
b110000 K#
b101100 i"
b101100 n"
b101000 O"
b101000 m"
b101000 J#
b101100 r"
b101100 P"
b101100 l"
b101100 s"
b101100 ^
b101100 N"
10
1H
#130000
00
0H
b1111011101 1
#135000
b0 w
b0 {"
b0 c#
0=#
b1011 y
b1011 |"
b1011 e#
0M#
0N#
1-"
15#
b0 *"
b0 G#
b0 ]"
b0 p"
b0 T#
b0 H"
b0 H#
b0 l#
b0 d"
b0 X#
b0 W"
b0 O#
b0 u#
b1011 %#
0n#
b0 ^"
b0 x"
b0 U#
b0 :$
b0 e"
b0 Y#
b0 <$
b1011 ^#
b1011 |
b1011 g#
b101100 k"
b0 "
b0 L
17#
0E"
b10 I#
b0 \"
b0 S#
b0 9$
b0 c"
b0 W#
b0 ;$
b1011 $#
b1011 &#
b10110000000000000000 '#
b1011 (#
b1011 )#
b1011 j"
b101100 o"
b101100 q"
b1100 G
b10000000000000100000000000000000 ""
b10000000000000100000000000000000 )$
b0 =$
b0 j
b0 *
b0 k
b0 b
b0 &
b0 c
b1000000000000000000000001011 '"
b1000000000000000000000001011 *#
b1100 %
b1100 [
b1011 ("
b10000000000000100000000000000000 ($
b10000000000000100000000000000000 ~
b10000000000000100000000000000000 }"
0X
1W
b10000000000000100000000000000000 \
b10000000000000100000000000000000 ."
b10000000000000100000000000000100 Z"
b10000000000000100000000000000100 R#
b10000000000000100000000000000100 2$
b1 u
b1 )
b1 i
bx @$
bx S
b1000000000000000000000001011 K
b1000000000000000000000001011 $
b1000000000000000000000001011 Z
b1000000000000000000000001011 &"
b1000000000000000000000001011 u"
b110000 r"
b110000 P"
b110000 l"
b110000 s"
b110000 ^
b110000 N"
b101100 t"
b110100 K#
b1011100 i"
b110000 n"
b101100 O"
b101100 m"
b101100 J#
b10101110000100010000000000000000 v"
b10101110000100010000000000000000 )"
b0 f#
b0 !$
1z
b0 x
b0 ~#
b10001 v#
b10001 V"
b10001 P#
b10001 /$
b10000000000000100000000000000100 *$
b10000000000000100000000000000100 !"
01$
0T"
b1 3$
b1 ["
b1 8$
b10 5$
b10 Y"
b10 7$
10
1H
#140000
00
0H
b1111011100 1
#145000
1E#
1N#
0-"
1F#
b0 y
b0 |"
b0 e#
b0 %#
b110000 o"
b110000 q"
1?#
b1010 ^#
b1010 |
b1010 g#
b0 k"
1V
1S"
07#
0]#
b0 I#
b0 $#
b0 &#
b0 '#
b0 (#
b0 )#
b0 j"
b0 +
b0 Q
b0 -
b0 n
0{#
b0 ""
b0 )$
b0 .
b0 o
b0 R
b0 /
b0 p
b1011 G
b0 '"
b0 *#
b10000000000000100000000000000000 Z"
b10000000000000100000000000000000 R#
b10000000000000100000000000000000 2$
b0 a
b0 I"
b0 l
b0 F"
b0 >$
0&$
b0 ($
b0 ~
b0 }"
0U
0W
b0 \
b0 ."
b1100 ("
b1011 %
b1011 [
b0 K
b0 $
b0 Z
b0 &"
b0 u"
bx S
bx @$
b1 t
b1 (
b1 h
06$
0U"
b10000000000000100000000000000100 3$
b10000000000000100000000000000100 ["
b10000000000000100000000000000100 8$
b10001 0$
b10001 X"
b10001 Q#
b10001 4$
b10000000000000100000000000000000 *$
b10000000000000100000000000000000 !"
b0 v#
b0 V"
b0 P#
b0 /$
0o#
0D"
b0 m#
b0 G"
b1011 h#
0x#
b1011 {
b1011 "$
b1011 f#
b1011 !$
0z
b1011 x
b1011 ~#
b0 d#
b0 }#
b0 v
b0 |#
b0 y"
b0 _"
b1000000000000000000000001011 v"
b1000000000000000000000001011 )"
b110000 t"
b111000 K#
b110100 i"
b110100 n"
b110000 O"
b110000 m"
b110000 J#
b101100 r"
b101100 P"
b101100 l"
b101100 s"
b101100 ^
b101100 N"
10
1H
#150000
00
0H
b10000000000000000000000000000011 4
b0xxxxxxxxxxxxxxxxxxxx00 D
b0xxxxxxxxxxxxxxxxxxxx00 Y
